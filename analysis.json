{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A list of requests in the project details view.\n\nThe list doesn't offer any logic related to data models. Actions peformed\nby the user have to be handled by event handlers and performed in\nhosting application.\n\nNote: **All events fired by this element do not bubbles**.\n\n### Example\n\n```html\n<project-requests-list items=\"[...]\"></project-requests-list>\n```\n\n```javascript\ndocument.querySelector('project-requests-list')\n.addEventListener('list-items-delete', function(e) {\n console.log('Items to delete:', e.detail.items);\n});\n```\n\n### Styling\n\n`<project-requests-list>` provides the following custom properties and\nmixins for styling:\n\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--project-requests-list-item-selected-background-color` | Background color of selected item | `#E0E0E0`\n`--secondary-action-button-color` | Color of the secondary action button | `--primary-color`\n`--primary-color` | Color of the secondary action buttons | ``\n`--project-requests-list-item-dragging-background-color` | Item bg color when dragging | `#fff`\n* `--context-menu-item-color` | Color of the dropdown menu items | ``\n`--context-menu-item-background-color` | Background olor of the dropdown menu items | ``\n`--context-menu-item-color-hover` | Color of the dropdown menu items when hovering | ``\n`--context-menu-item-background-color-hover` | Background olor of the dropdown menu items when hovering | ``",
      "summary": "",
      "path": "project-requests-list.js",
      "properties": [
        {
          "name": "project",
          "type": "Object | null | undefined",
          "description": "A project object related to the list of requests.\nIt is required property when using drag and drop.\nWhen project object changes related `projectId` property also changes\nand this triggest querying for requests list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 6
            },
            "end": {
              "line": 238,
              "column": 58
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_projectUpdated\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "projectId",
          "type": "string | null | undefined",
          "description": "Project's datastore ID.\nWhen setting `project` property this ptoperty is updated automatically.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_projectIdChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "loadingRequests",
          "type": "boolean | null | undefined",
          "description": "True when the request data are being loaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array | null | undefined",
          "description": "List of selected items on the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 6
            },
            "end": {
              "line": 261,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasSelection",
          "type": "boolean | null | undefined",
          "description": "If true, the user selected some elements on list. Check the\n`this.selectedItems` property to check for the selected elements.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "allSelected",
          "type": "boolean | null | undefined",
          "description": "True to select all elements on the list",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_toggleSelectAll\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "keyword",
          "type": "string | null | undefined",
          "description": "Filter keyword. It filters the view matching name, url or method.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 52
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_reRender\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 84
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_draggableChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 2
            },
            "end": {
              "line": 307,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 2
            },
            "end": {
              "line": 313,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_draggableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 331,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 2
            },
            "end": {
              "line": 341,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_projectUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 2
            },
            "end": {
              "line": 348,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_projectIdChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId"
            }
          ]
        },
        {
          "name": "_errorToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 2
            },
            "end": {
              "line": 371,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeRowClass",
          "description": "Computes if the item has selected class name.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 2
            },
            "end": {
              "line": 382,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_navigateItem",
          "description": "Handler for click action on the \"open\" button",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 2
            },
            "end": {
              "line": 393,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasSelection",
          "description": "Computes the `hasSelection` property value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 2
            },
            "end": {
              "line": 401,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "Number",
              "description": "Curent size of selection"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if argument > 0"
          }
        },
        {
          "name": "_toggleSelectAll",
          "description": "Toggles selection of of all itmes on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 2
            },
            "end": {
              "line": 429,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allSelected",
              "type": "Boolean",
              "description": "Current state of the `allSelected` property."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeOptionsTableClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasSelection"
            }
          ]
        },
        {
          "name": "_deleteSelected",
          "description": "Informs hosting application to delete currently selected items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__deleteItems",
          "description": "Dispatches `list-items-delete` event to inform hosting\napplication to remove items.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of items to delete"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_exportSelected",
          "description": "When selection is set it calls `_dispatchExport()` event with list\nof items to export.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 465,
              "column": 2
            },
            "end": {
              "line": 473,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchExport",
          "description": "Dispatches `list-items-export` event.\nThe event do not bubble.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 481,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of items to export."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "e"
          }
        },
        {
          "name": "_closeMenu",
          "description": "Closes list menu and resets its selection.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 493,
              "column": 2
            },
            "end": {
              "line": 498,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_filterView",
          "description": "Filter function for the table.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 2
            },
            "end": {
              "line": 523,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Request item."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when the item should be rendered given current `keyword`."
          }
        },
        {
          "name": "_reRender",
          "description": "Re-renders the view when the keyword change to apply filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 2
            },
            "end": {
              "line": 527,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestDetails",
          "description": "Called to request details panel for the list item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 2
            },
            "end": {
              "line": 536,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSelectItem",
          "description": "Handler for the selection related events.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 2
            },
            "end": {
              "line": 565,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDropPointer",
          "description": "Removes drop pointer from shadow root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 569,
              "column": 2
            },
            "end": {
              "line": 575,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDropPointer",
          "description": "Adds drop pointer to shadow root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 2
            },
            "end": {
              "line": 599,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ref",
              "type": "Element",
              "description": "A list item to be used as a reference point."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragoverHandler",
          "description": "Handler for `dragover` event on this element. If the dagged item is compatible\nit renders drop message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 2
            },
            "end": {
              "line": 628,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDropEffect",
          "description": "Computes value fro `dropEffect` property of the `DragEvent`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 634,
              "column": 2
            },
            "end": {
              "line": 647,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Either `copy` or `move`."
          }
        },
        {
          "name": "_dragleaveHandler",
          "description": "Handler for `dragleave` event on this element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 652,
              "column": 2
            },
            "end": {
              "line": 662,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dropHandler",
          "description": "Handler for `drag` event on this element. If the dagged item is compatible\nit adds request to saved requests.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 668,
              "column": 2
            },
            "end": {
              "line": 704,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleMoveDrop",
          "description": "Handles logic when drop event is `move` in effect.\nRemoves reference to old project (if exists). It uses `arc-source/project-detail`\ndata from event which should hold project ID.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 713,
              "column": 2
            },
            "end": {
              "line": 729,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request object"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the request object changed."
          }
        },
        {
          "name": "_insertRequestAt",
          "description": "Updates project and request objects and inserts the request at a position.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 738,
              "column": 2
            },
            "end": {
              "line": 779,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "The position in requests order"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request to update"
            },
            {
              "name": "forceRequestUpdate",
              "type": "Boolean",
              "description": "Forces update on request object even\nwhen position hasn't change."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchProjectChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 781,
              "column": 2
            },
            "end": {
              "line": 785,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "_dragStart",
          "description": "Handler for the `dragstart` event added to the list item when `draggableEnabled`\nis set to true.\nThis function sets request data on the `dataTransfer` object with `arc/request-object`\nmime type. The request data is a serialized JSON with request model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 793,
              "column": 2
            },
            "end": {
              "line": 804,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDraggableValue",
          "description": "Computes value for the `draggable` property of the list item.\nWhen `draggableEnabled` is set it returns true which is one of the\nconditions to enable drag and drop on an element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 812,
              "column": 2
            },
            "end": {
              "line": 814,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "draggableEnabled",
              "type": "Boolean",
              "description": "Current value of `draggableEnabled`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "`true` or `false` (as string) depending on the argument."
          }
        },
        {
          "name": "_updateListStyles",
          "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 820,
              "column": 2
            },
            "end": {
              "line": 828,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "?String"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/dnd.html",
          "description": "Drag and drop"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 855,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.RequestEditor",
      "attributes": [
        {
          "name": "project",
          "description": "A project object related to the list of requests.\nIt is required property when using drag and drop.\nWhen project object changes related `projectId` property also changes\nand this triggest querying for requests list.",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 6
            },
            "end": {
              "line": 238,
              "column": 58
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "project-id",
          "description": "Project's datastore ID.\nWhen setting `project` property this ptoperty is updated automatically.",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "loading-requests",
          "description": "True when the request data are being loaded.",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-items",
          "description": "List of selected items on the list.",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 6
            },
            "end": {
              "line": 261,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-selection",
          "description": "If true, the user selected some elements on list. Check the\n`this.selectedItems` property to check for the selected elements.",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "all-selected",
          "description": "True to select all elements on the list",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "keyword",
          "description": "Filter keyword. It filters the view matching name, url or method.",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 52
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 84
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "list-item-details",
          "description": "Fired when the \"request details\" has been requested via this UI.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "list-item-open",
          "description": "Fired when the user clicked on an open button on an item.\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "list-items-delete",
          "description": "Fired when the user clicked on a delete button on an item.\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "list-items-export",
          "description": "Dispatched when the user requested to export selected items.\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loading-requests-changed",
          "description": "Fired when the `loadingRequests` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "project-requests-list",
      "mixins": [
        "RequestsListMixin"
      ]
    }
  ]
}
