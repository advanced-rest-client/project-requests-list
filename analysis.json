{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A list of requests in the project details view.\n\nThe list doesn't offer any logic related to data models. Actions peformed\nby the user have to be handled by event handlers and performed in\nhosting application.\n\nNote: **All events fired by this element do not bubbles**.\n\n### Example\n\n```html\n<project-requests-list items=\"[...]\"></project-requests-list>\n```\n\n```javascript\ndocument.querySelector('project-requests-list')\n.addEventListener('list-items-delete', function(e) {\n console.log('Items to delete:', e.detail.items);\n});\n```\n\n### Styling\n\n`<project-requests-list>` provides the following custom properties and\nmixins for styling:\n\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--project-requests-list` | Mixin applied to the element | `{}`\n`--project-requests-list-item` | Mixin applied to each item on the list | `{}`\n`--project-requests-list-item-selected-background-color` | Background color of selected item | `#E0E0E0`\n`--project-requests-list-item-selected` | Mixin applied to selected item | `{}`\n`--action-button` | Mixin apllied to the primary action buttons | `{}`\n`--secondary-action-button-color` | Color of the secondary action button | `--primary-color`\n`--primary-color` | Color of the secondary action buttons | ``\n`--arc-font-body1` | Mixin applied to the labels in the table header | `{}`\n`--project-requests-list-method-label` | Mixin applied to the `http-method-label` element | `{}`\n`--project-requests-list-url-label` | Mixin applied to the URL label element | `{}`\n`--project-requests-list-name-label` | Mixin applied to the request name label element | `{}`\n`--project-requests-list-body` | Mixn applied to the URL and name container | `{}`\n`--project-requests-list-header` | Mixin applied to the list header options section. | `{}`\n`--project-requests-list-selection-counter` | Mixin applied to the selection counter | `{}`\n`--project-requests-list-search-input` | Mixin applied to the search input | `{}`\n`--project-requests-list-item-dragging-background-color` | Item bg color when dragging | `#fff`\n* `--context-menu-item-color` | Color of the dropdown menu items | ``\n`--context-menu-item-background-color` | Background olor of the dropdown menu items | ``\n`--context-menu-item-color-hover` | Color of the dropdown menu items when hovering | ``\n`--context-menu-item-background-color-hover` | Background olor of the dropdown menu items when hovering | ``",
      "summary": "",
      "path": "project-requests-list.html",
      "properties": [
        {
          "name": "requests",
          "type": "Array.<Object>",
          "description": "The list of request to render.\nIt can be eirther saved, history or project items.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "hasRequests",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when the project has requests.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "projectId",
          "type": "string | null | undefined",
          "description": "Project's datastore ID.\nWhen setting `project` property this ptoperty is updated automatically.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 8
            },
            "end": {
              "line": 255,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_projectIdChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "listType",
          "type": "string | null | undefined",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateListStyles\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_hasTwoLines",
          "type": "boolean | null | undefined",
          "description": "Computed value if the list item should be consisted of two lines of\ndescription.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 91,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 93
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project",
          "type": "Object | null | undefined",
          "description": "A project object related to the list of requests.\nIt is required property when using drag and drop.\nWhen project object changes related `projectId` property also changes\nand this triggest querying for requests list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 247,
              "column": 60
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_projectUpdated\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "loadingRequests",
          "type": "boolean | null | undefined",
          "description": "True when the request data are being loaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 8
            },
            "end": {
              "line": 263,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array | null | undefined",
          "description": "List of selected items on the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 8
            },
            "end": {
              "line": 270,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasSelection",
          "type": "boolean | null | undefined",
          "description": "If true, the user selected some elements on list. Check the\n`this.selectedItems` property to check for the selected elements.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 8
            },
            "end": {
              "line": 279,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "allSelected",
          "type": "boolean | null | undefined",
          "description": "True to select all elements on the list",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 8
            },
            "end": {
              "line": 286,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_toggleSelectAll\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "keyword",
          "type": "string | null | undefined",
          "description": "Filter keyword. It filters the view matching name, url or method.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 8
            },
            "end": {
              "line": 290,
              "column": 54
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_reRender\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 294,
              "column": 86
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_draggableChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "True if the event is cancelable (default value)."
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_requestDeletedHandler",
          "description": "Handler for `request-object-deleted` event. Removes request from the list\nif it existed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_itemDeleted",
          "description": "Removes an item from the list by given id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_historyItemDeleted",
          "description": "Removes a history item from the list by given id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_requestChangedHandler",
          "description": "Handler for `request-object-changed` custom event.\nDepending on the `type` property it updates / adds / removes item from\nthe requests list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_projectTypeChanged",
          "description": "Handles request change when type is project.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Changed request object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_isProjectRequest",
          "description": "Checks if requests is related to current project.\n`projectId` has to be set on the element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_savedTypeChanged",
          "description": "Handles request change when type is saved or history.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Changed request object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectRead",
          "description": "Dispatches `project-read` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 303,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID to read"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectList",
          "description": "Dispatches `request-project-list` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchRequestChanged",
          "description": "Dispatches `request-object-changed` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 330,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Request type, `saved` or `history`."
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Updated request to store."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "readProjectRequests",
          "description": "A function to read request data for a project.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise.resolved to requests list."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_legacySort",
          "description": "Sorts requests list by `projectOrder` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateBulk",
          "description": "Updates requests in bulk opeartion.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateRequest",
          "description": "Sends the `request-object-changed` custom event for each request on the list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 408,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Request object."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise resolved when the request object is updated."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeHasRequests",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 427,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeHasTwoLines",
          "description": "Computes value for `_hasTwoLines` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 435,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "listType",
              "type": "?String",
              "description": "Selected list type."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateListStyles",
          "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 829,
              "column": 4
            },
            "end": {
              "line": 837,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "?String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyListStyles",
          "description": "Applies `--paper-item-icon-width` variable.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 460,
              "column": 4
            },
            "end": {
              "line": 473,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size",
              "type": "Number",
              "description": "Icon width in pixels."
            },
            {
              "name": "target",
              "type": "?Element",
              "description": "The target to apply styling. Default to this."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_persistRequestsOrder",
          "description": "Stores current order of requests in the project.\nThis shouls be only called wshen `project` property is set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 492,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_idsArrayEqual",
          "description": "Tests if two arrays has the same order of ids (strings).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 499,
              "column": 4
            },
            "end": {
              "line": 515,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a1",
              "type": "Array.<String>",
              "description": "Array a"
            },
            {
              "name": "a2",
              "type": "Array.<String>",
              "description": "Array b"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when elements are ordered the same way."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectUpdate",
          "description": "Dispatches `project-object-changed` event to inform model to update\nthe data.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 523,
              "column": 4
            },
            "end": {
              "line": 531,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Data to store."
            }
          ],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_projectChanged",
          "description": "Handler for the `project-object-changed` event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "False if the event was not handled."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateProjectOrder",
          "description": "Updates requests order when project changed.\nIt reorder requests array for changed project order. It won't change\nrequests array when order is the same. It also won't change order when\nrequest list is different that project's requests list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 559,
              "column": 4
            },
            "end": {
              "line": 586,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Changed project"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when order has changed"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchExportData",
          "description": "Dispatches `export-data` event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 593,
              "column": 4
            },
            "end": {
              "line": 609,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request to export."
            },
            {
              "name": "opts",
              "type": "Object"
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_openRequest",
          "description": "Dispatches navigate event to open a request",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 615,
              "column": 4
            },
            "end": {
              "line": 626,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_validateType",
          "description": "Throws an error when type is not set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 631,
              "column": 4
            },
            "end": {
              "line": 635,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Passed to the function type"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_draggableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 330,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 350,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_projectUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_projectIdChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId"
            }
          ]
        },
        {
          "name": "_errorToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 380,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeRowClass",
          "description": "Computes if the item has selected class name.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 391,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_navigateItem",
          "description": "Handler for click action on the \"open\" button",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 396,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasSelection",
          "description": "Computes the `hasSelection` property value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "Number",
              "description": "Curent size of selection"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if argument > 0"
          }
        },
        {
          "name": "_toggleSelectAll",
          "description": "Toggles selection of of all itmes on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allSelected",
              "type": "Boolean",
              "description": "Current state of the `allSelected` property."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeOptionsTableClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 4
            },
            "end": {
              "line": 441,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasSelection"
            }
          ]
        },
        {
          "name": "_deleteSelected",
          "description": "Informs hosting application to delete currently selected items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__deleteItems",
          "description": "Dispatches `list-items-delete` event to inform hosting\napplication to remove items.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 4
            },
            "end": {
              "line": 468,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of items to delete"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_exportSelected",
          "description": "When selection is set it calls `_dispatchExport()` event with list\nof items to export.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 4
            },
            "end": {
              "line": 482,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchExport",
          "description": "Dispatches `list-items-export` event.\nThe event do not bubble.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 490,
              "column": 4
            },
            "end": {
              "line": 498,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of items to export."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "e"
          }
        },
        {
          "name": "_closeMenu",
          "description": "Closes list menu and resets its selection.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 4
            },
            "end": {
              "line": 507,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_filterView",
          "description": "Filter function for the table.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 4
            },
            "end": {
              "line": 532,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Request item."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when the item should be rendered given current `keyword`."
          }
        },
        {
          "name": "_reRender",
          "description": "Re-renders the view when the keyword change to apply filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 534,
              "column": 4
            },
            "end": {
              "line": 536,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestDetails",
          "description": "Called to request details panel for the list item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 545,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSelectItem",
          "description": "Handler for the selection related events.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 4
            },
            "end": {
              "line": 574,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDropPointer",
          "description": "Removes drop pointer from shadow root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 578,
              "column": 4
            },
            "end": {
              "line": 584,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDropPointer",
          "description": "Adds drop pointer to shadow root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 4
            },
            "end": {
              "line": 608,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ref",
              "type": "Element",
              "description": "A list item to be used as a reference point."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragoverHandler",
          "description": "Handler for `dragover` event on this element. If the dagged item is compatible\nit renders drop message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 4
            },
            "end": {
              "line": 637,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDropEffect",
          "description": "Computes value fro `dropEffect` property of the `DragEvent`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 4
            },
            "end": {
              "line": 656,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Either `copy` or `move`."
          }
        },
        {
          "name": "_dragleaveHandler",
          "description": "Handler for `dragleave` event on this element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 661,
              "column": 4
            },
            "end": {
              "line": 671,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dropHandler",
          "description": "Handler for `drag` event on this element. If the dagged item is compatible\nit adds request to saved requests.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 677,
              "column": 4
            },
            "end": {
              "line": 713,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleMoveDrop",
          "description": "Handles logic when drop event is `move` in effect.\nRemoves reference to old project (if exists). It uses `arc-source/project-detail`\ndata from event which should hold project ID.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 722,
              "column": 4
            },
            "end": {
              "line": 738,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request object"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the request object changed."
          }
        },
        {
          "name": "_insertRequestAt",
          "description": "Updates project and request objects and inserts the request at a position.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 747,
              "column": 4
            },
            "end": {
              "line": 788,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "The position in requests order"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request to update"
            },
            {
              "name": "forceRequestUpdate",
              "type": "Boolean",
              "description": "Forces update on request object even\nwhen position hasn't change."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchProjectChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 790,
              "column": 4
            },
            "end": {
              "line": 794,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "_dragStart",
          "description": "Handler for the `dragstart` event added to the list item when `draggableEnabled`\nis set to true.\nThis function sets request data on the `dataTransfer` object with `arc/request-object`\nmime type. The request data is a serialized JSON with request model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 802,
              "column": 4
            },
            "end": {
              "line": 813,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDraggableValue",
          "description": "Computes value for the `draggable` property of the list item.\nWhen `draggableEnabled` is set it returns true which is one of the\nconditions to enable drag and drop on an element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 821,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "draggableEnabled",
              "type": "Boolean",
              "description": "Current value of `draggableEnabled`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "`true` or `false` (as string) depending on the argument."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/dnd.html",
          "description": "Drag and drop"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 235,
          "column": 2
        },
        "end": {
          "line": 864,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.ProjectRequestsList",
      "attributes": [
        {
          "name": "requests",
          "description": "The list of request to render.\nIt can be eirther saved, history or project items.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "has-requests",
          "description": "Computed value, true when the project has requests.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "type",
          "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project-id",
          "description": "Project's datastore ID.\nWhen setting `project` property this ptoperty is updated automatically.",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 8
            },
            "end": {
              "line": 255,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "list-type",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project",
          "description": "A project object related to the list of requests.\nIt is required property when using drag and drop.\nWhen project object changes related `projectId` property also changes\nand this triggest querying for requests list.",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 247,
              "column": 60
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "loading-requests",
          "description": "True when the request data are being loaded.",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 8
            },
            "end": {
              "line": 263,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-items",
          "description": "List of selected items on the list.",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 8
            },
            "end": {
              "line": 270,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-selection",
          "description": "If true, the user selected some elements on list. Check the\n`this.selectedItems` property to check for the selected elements.",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 8
            },
            "end": {
              "line": 279,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "all-selected",
          "description": "True to select all elements on the list",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 8
            },
            "end": {
              "line": 286,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "keyword",
          "description": "Filter keyword. It filters the view matching name, url or method.",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 8
            },
            "end": {
              "line": 290,
              "column": 54
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 294,
              "column": 86
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "list-item-details",
          "description": "Fired when the \"request details\" has been requested via this UI.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "list-item-open",
          "description": "Fired when the user clicked on an open button on an item.\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "list-items-delete",
          "description": "Fired when the user clicked on a delete button on an item.\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "list-items-export",
          "description": "Dispatched when the user requested to export selected items.\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loading-requests-changed",
          "description": "Fired when the `loadingRequests` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "list-context-menu",
          "range": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 150,
              "column": 50
            }
          }
        }
      ],
      "tagname": "project-requests-list",
      "mixins": [
        "ArcComponents.RequestsListMixin"
      ]
    }
  ]
}
